version: '3.8'

services:
  traefik:
    image: docker.io/traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --api.debug=true
      - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
    ports:
      - "443:443"
    volumes:
      - /run/user/${UID}/podman/podman.sock:/var/run/docker.sock:ro
    labels:
      # Traefik dashboard accessible at /traefik/
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=PathPrefix(`/traefik`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=traefik-stripprefix"
      # Strip /traefik prefix for dashboard
      - "traefik.http.middlewares.traefik-stripprefix.stripPrefix.prefixes=/traefik"
      # Direct API access
      - "traefik.http.routers.traefik-api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.traefik-api.entrypoints=websecure"
      - "traefik.http.routers.traefik-api.tls=true"
      - "traefik.http.routers.traefik-api.service=api@internal"
      - "traefik.http.routers.traefik-api.priority=100"
    networks:
      - web

  keycloak:
    image: docker.io/keycloak/keycloak:latest
    container_name: keycloak
    restart: unless-stopped
    command: 
      - start-dev
      - --import-realm
      - --log-level=INFO
    volumes:
      - ./keycloak/demo-realm.json:/opt/keycloak/data/import/demo-realm.json:ro
      - keycloak-data:/opt/keycloak/data
    # No direct port exposure - all traffic goes through Traefik
    environment:
      KC_HOSTNAME: "https://${DOMAIN}/keycloak"
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: "true"
      KC_HTTP_RELATIVE_PATH: "/keycloak"
      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: 8080
      # Tell Keycloak it's behind an edge proxy so it reconstructs external URLs from Forwarded headers
      KC_PROXY_HEADERS: forwarded
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      # Enable only HTTP request/response logging
      KC_LOG_LEVEL: DEBUG
      
    labels:
      # Keycloak accessible at /keycloak/
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=PathPrefix(`/keycloak`)"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.routers.keycloak.service=keycloak"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    networks:
      - web

  demo-app:
    build: ./app
    container_name: demo-app
    restart: unless-stopped
    # No direct port exposure - all traffic goes through Traefik
    depends_on:
      - keycloak
    environment:
      DOMAIN: ${DOMAIN}
      KEYCLOAK_URL: https://${DOMAIN}/keycloak
      KEYCLOAK_INTERNAL_URL: http://keycloak:8080/keycloak
      HTTP_PORT: 3000
    labels:
      # Demo app accessible at root / (catch-all for non-keycloak, non-traefik paths)
      - "traefik.enable=true"
      - "traefik.http.routers.demo-app.rule=!PathPrefix(`/keycloak`) && !PathPrefix(`/traefik`) && !PathPrefix(`/api`)"
      - "traefik.http.routers.demo-app.entrypoints=websecure"
      - "traefik.http.routers.demo-app.tls=true"
      - "traefik.http.routers.demo-app.service=demo-app"
      - "traefik.http.routers.demo-app.priority=1"
      - "traefik.http.services.demo-app.loadbalancer.server.port=3000"
    networks:
      - web

  # Network debugging container with useful tools
  nettools:
    image: docker.io/nicolaka/netshoot:latest
    container_name: nettools
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - web
    command: sleep infinity

networks:
  web:
    driver: bridge

volumes:
  keycloak-data: