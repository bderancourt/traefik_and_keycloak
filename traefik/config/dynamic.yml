http:
  middlewares:
    # Middleware for secure headers (optimized for HTTPS-only setup)
    secure-headers:
      headers:
        # HTTP security headers
        referrerPolicy: "same-origin"
        stsSeconds: 31536000
        stsIncludeSubdomains: true
        stsPreload: true
        forceSTSHeader: true
        frameDeny: true
        contentTypeNosniff: true
        browserXssFilter: true
        # Additional security headers
        customResponseHeaders:
          X-Content-Type-Options: "nosniff"
          X-Frame-Options: "DENY"
          X-XSS-Protection: "1; mode=block"
          Referrer-Policy: "same-origin"

    # Keycloak-specific headers middleware (using modern Forwarded header)
    keycloak-headers:
      headers:
        customRequestHeaders:
          # Use X-Forwarded headers for now (more reliable than Forwarded in Traefik)
          X-Forwarded-Proto: "https"
          X-Forwarded-Host: "localhost"
          X-Forwarded-Port: "443"
        customResponseHeaders:
          X-Frame-Options: "SAMEORIGIN"

    # Keycloak-specific secure headers (minimal, Keycloak-friendly)
    keycloak-secure-headers:
      headers:
        # HSTS for Keycloak (important for auth security)
        stsSeconds: 31536000
        stsIncludeSubdomains: true
        stsPreload: true
        forceSTSHeader: true
        # Content security without breaking Keycloak functionality
        contentTypeNosniff: true
        referrerPolicy: "same-origin"
    cors-headers:
      headers:
        accessControlAllowOriginList:
          - "https://localhost"
        accessControlAllowMethods:
          - "GET"
          - "POST"
          - "PUT"
          - "DELETE"
          - "OPTIONS"
        accessControlAllowHeaders:
          - "authorization"
          - "content-type"
        accessControlExposeHeaders:
          - "authorization"
        accessControlAllowCredentials: true
        accessControlMaxAge: 100
        addVaryHeader: true

    # Keycloak path replacement middleware
    keycloak-pathfix:
      replacePathRegex:
        regex: "^/keycloak(.*)"
        replacement: "$1"

    # Path-based routing middleware
    traefik-stripprefix:
      stripPrefix:
        prefixes:
          - "/traefik"

    keycloak-stripprefix:
      stripPrefix:
        prefixes:
          - "/keycloak"

  # Services and routers
  routers:
    # Direct API access - for dashboard API calls that don't include /traefik prefix
    traefik-direct-api:
      rule: "PathPrefix(`/api`)"
      entrypoints:
        - websecure
      middlewares:
        - secure-headers
      service: "api@internal"
      priority: 100
      tls: {}
      
    # Traefik dashboard - accessible at /traefik/
    traefik:
      rule: "PathPrefix(`/traefik`)"
      entrypoints:
        - websecure
      middlewares:
        - secure-headers
        - traefik-stripprefix
      service: "api@internal"
      tls: {}
      
    # Keycloak service - accessible at /keycloak/
    keycloak:
      rule: "PathPrefix(`/keycloak`)"
      entrypoints:
        - websecure
      middlewares:
        - keycloak-headers
        - keycloak-secure-headers
      service: keycloak
      tls: {}
      
    # Demo app service - accessible at root /
    demo-app:
      rule: "!PathPrefix(`/keycloak`) && !PathPrefix(`/traefik`) && !PathPrefix(`/api`)"
      entrypoints:
        - websecure
      middlewares:
        - secure-headers
      service: demo-app
      priority: 1
      tls: {}

  services:
    # Keycloak service (HTTP mode)
    keycloak:
      loadBalancer:
        servers:
          - url: "http://keycloak:8080"
    
    # Demo app service (HTTP mode)
    demo-app:
      loadBalancer:
        servers:
          - url: "http://demo-app:3000"

tls:
  certificates:
    - certFile: /certs/localhost.crt
      keyFile: /certs/localhost.key
      stores:
        - default
  stores:
    default:
      defaultCertificate:
        certFile: /certs/localhost.crt
        keyFile: /certs/localhost.key
  options:
    default:
      minVersion: "VersionTLS12"
      cipherSuites:
        - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
        - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
        - "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"

